apply(iris, 2, mean) # Contiene la variable "Species"
apply(iris[, 1:4], 2, mean) # Solo contiene las variables num√©ricas
# ===== Question 3 =====
head(mtcars)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
# ===== Question 4 =====
medias_hp_cilindro <- sapply(split(mtcars$hp, mtcars$cyl), mean)
abs(medias_hp_cilindro[1] - medias_hp_cilindro[3])
?bin
?rbin
?rbin()
?rbinom
pbinom(12, 100, .1)
pbinom(12, 100, .1) - pbinom(10, 100, .1)
pbinom(22, 100, .1) - pbinom(20, 100, .1)
pbinom(22, 100, 2/10) - pbinom(20, 100, 2/10)
library("swirl", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
swirl()
install.packages(c("boot", "class", "cluster", "codetools", "data.table", "httr", "jsonlite", "KernSmooth", "labeling", "maps", "MASS", "mgcv", "Rcpp", "RCurl", "spam", "swirl", "testthat", "xlsx", "xlsxjars"))
library("swirl", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
swirl()
swirl()
install_from_swirl("Getting and Cleaning Data")
swirl()
mydf <- read.csv(path2csv, stringsAsFactors = F)
mydf <- read.csv(path2csv, stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
cran
?manip
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
-5:20
-(5:20)
select(cran, -(size))
select(cran, -(X:size))
filter(cran, package == "swirl")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country == "IN" | country == "IN")
filter(cran, country == "US" | country == "IN")
filter(cran, size > 100500, r_os == "linux_gnu")
filter(cran, size > 100500, r_os == "linux-gnu")
is.na(c(3, 5, NA, 10))
!is.na(c(3, 5, NA, 10))
filter(cran, !is.na(r_version))
cran2 <- select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_gb = size_mb / 2^10)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb/2^10)
mutate(cran3, correct_size = size + 1000)
summarize(cran, avg_bytes = mean(size))
library(httr)
require(httpuv)
require(jsonlite)
oauth_endpoints("github")
myapp <- oauth_app("quiz2", "041fe7d5df66f8834c1b", secret="85ab3505e732f175f8f4369367ee4db1abdbe4a6")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
req <- GET("https://api.github.com/users/jtleek/repos", config(token = github_token))
stop_for_status(req)
output <- content(req)
list(output[[5]]$name, output[[5]]$creat)
conexion <- url("http://biostat.jhsph.edu/~jleek/contact.html")
HTMLCode <- readLines(conexion)
close(conexion)
class(HTMLCode)
head(HTMLCode)
nchar(HTMLCode[10])
nchar(HTMLCode[20])
nchar(HTMLCode[30])
nchar(HTMLCode[100])
con <- url("http://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
data_fwf <- read.fwf(file=con, skip=4, widths=c(11,8,4,9,4,9,4,9,4))
close(con)
sum(data_fwf[, 4])
library("swirl", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
swirl()
library(dplyr)
cran <- tbl_df()
cran <- tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package <- group_by(cran, package)
by_package
summarize(by_package)
summarize(by_package, mean(size))
?n
?n_distinct
submit()
pack_sum
quantile(pack_sum$count, probs = 0.99)
top_counts <- filter(pack_sum, count > 679)
top_counts
head(top_counts, 20)
arrange(top_counts, desc(count))
quantile(pack_sum$unique, probs = 0.99)
top_unique <- filter(pack_sum, unique > 465)
top_unique
arrange(top_unique, desc(unique))
submit()
submit()
submit()
??chain
submit()
submit()
submit()
submit()
swirl()
library(swirl)
swirl()
0
exit()
exit
library(swirl)
swirl()
Sys.getlocale("LC_TIME")
library(lubridate)
help(packgae = lubridate)
help(lubridate)
help(package = lubridate)
today()
this_day <- today()
this_day
day(this_day)
wday(this_day)
wday(this_day, label = T)
wday(this_day, label = TRUE)
this_moment <- now()
this_moment
hour(this_moment)
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989-04-17")
ymd("1989 May 17")
myd("March 12, 1975")
mdy("March 12, 1975")
dmy(25081985)
ymd("192012")
ymd("192012--")
ymd("1920/1/2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
this_moment <- update(this_moment, hours = hour(now()), minutes = minute(now()))
this_moment
nyc <- now(tzone = "America/New_York")
nyc
depart <- nyc + days(2)
depart
depart <- update(depart, hours = 17, minutes = 34)
depart
arrive <- depart + hours(15) + munites(50)
arrive <- depart + hours(15) + minutes(50)
?with_tz
with_tz(arrive, tzone = "Asia/Hong_Kong")
arrive <- with_tz(arrive, "Asia/Hong_Kong")
arrive
mdy("June 17, 2008", tz = "Singapore")
last_time <- mdy("June 17, 2008", tz = "Singapore")
last_time
?new_interval
how_long <- new_interval(last_time, arrive)
as.period(how_long)
stopwatch()
library(swirl)
swirl()
library(swirl)
install_from_swirl("Regression Models")
swirl()
plot(child ~ parent, galton)
plot(jitter(child, 4) ~ parent, galton)
regrline <- lm(child ~ parent, galton)
abline(regrline, lwd = 3, col = "red")
summary(regrline)
fit <- lm(child ~ parent, galton)
summary(fit)
mean(fit$residuals)
cov(fit$residuals, galton$parent)
ols.ic <- fit$coefficients[1]
ols.ic <- fit$coef[1]
ols.slope <- fit$coef[2]
lhs - rhs
all.equal(lhs, rhs)
varChild <- var(galton$child)
varRes <- var(fit$residuals)
varEst <- var(est(ols.slope, ols.ic))
all.equal(varChild, varRes)
all.equal(varChild, varEst+varRes)
efit <- lm(accel ~ mag+dist, attenu)
mean(efit$residuals)
cov(efit$residuals, attenu$mag)
cov(efit$residuals, attenu$dist)
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
sol <- c(0.3, 0.1471, 0.0025, 1.077)
min(sum(w*((x-sol)^2)))
sum(w*((x-sol)^2))
sum(w*((x-sol[1])^2))
sum(w*((x-sol[2])^2))
sum(w*((x-sol[3])^2))
sum(w*((x-sol[4])^2))
for (i in 1:4) sum(w*((x-sol[i])^2))
for (i in 1:4) sum(w*((x-sol[i])^2))
for(i in 1:4) sum(w*((x-sol[i])^2))
for(i in 1:4) {
sum(w*((x-sol[i])^2))
}
sum(w*((x-sol[i])^2))
sum(w*((x-sol[1])^2))
sum(w*((x-sol[2])^2))
sum(w*((x-sol[3])^2))
sum(w*((x-sol[4])^2))
mean(x)
x - sol[1]
(x - sol[1])^2
((x - sol[1])^2)*w
sum(((x - sol[1])^2)*w)
sum(((x - sol[1])^2)*w)
sum(((x - sol[2])^2)*w)
sum(((x - sol[3])^2)*w)
sum(((x - sol[4])^2)*w)
(2*(sum(w*x)))/(sum(w))
((sum(w*x)))/(sum(w))
(sum(w*x))/sum(w)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
data <- data.frame(x, y)
lm(x~y, data)
fit <- lm(x~y, data)
summary(fit)
fit$coefficients
data(imtcars)
data(mtcars)
mtcars
data <- mtcars
data(mtcars)
mtcars
?mtcars
fit <- lm(mtcars$mpg~mtcars$wt, mtcars)
summary(Ifit)
fit$coefficients
fit <- lm(mtcars$wt~mtcars$mpg, mtcars)
fit$coefficients
mtcars$mpg
fit <- lm(mtcars$mpg~mtcars$wt, mtcars)
fit$coefficients
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
minimo <- (sum(w*x))/sum(w)
minimo
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
data <- data.frame(x, y)
fit <- lm(y ~ 0 + x, data)
fit$coefficients
fit <- lm(mtcars$mpg~mtcars$wt, mtcars)
fit$coefficients
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
media <- mean(x)
de <- sd(x)
x_norm <- (x-media)/de
x_norm
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
data <- data.frame(x, y)
fit <- lm(x ~ y, data)
fit$coefficients
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
data <- data.frame(x, y)
fit <- lm(x ~ y, data)
fit$coefficients
fit <- lm(y ~ x, data)
fit$coefficients
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
mean(x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
data <- data.frame(x, y)
fit <- lm(y ~ x, data)
fit$coefficients
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
data <- data.frame(x, y)
fit <- lm(y ~ 0 + x, data)
fit$coefficients
fit <- lm(mtcars$mpg~mtcars$wt, mtcars)
fit$coefficients
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
media <- mean(x)
de <- sd(x)
x_norm <- (x-media)/de
x_norm
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
data <- data.frame(x, y)
fit <- lm(y ~ x, data)
fit$coefficients
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
mean(x)
dnorm(70, 80, 10)
dnorm(70, 80, 10)*100
?dnorm
pnorm(70, 80, 10)
pnorm(0.70, 80, 10)
pnorm(70, 80, 10)
qnorm(0.95, 1100, 75)
choose(5, 4)
choose(5, 5)
choose(5, 0)
choose(5, 1)
choose(5, 2)
choose(5, 3)
choose(5, 4)
?pbinom
dbinom(4, 5, 0.5)
5*((1/2)^5)
((1/2)^5)
((1/2)^5)*4
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
fit <- lm(y~x)
summary(fit)
e <- resid(fit)
sqe <- e*e
res.var <- sum(sqe) / (length(e) - 2)
sqrt(res.var)
data(mtcars)
attach(mtcars)
fit <- lm(mpg ~ wt, mtcars)
summary(fit)
exp <- fit$coefficients[1] + mean(wt) * fit$coefficients[2]
exp - 2 * 0.5591
?mtcars
summary(fit)
fit[[1]][1] + 3 * fit[[1]][2]
summary(fit)
2 * (fit$coefficients[2] - 2 * 0.5591)
attributes(fit)
w.c <- fit$residuals ^ 2
fit.c <- lm(mpg ~ 1, mtcars)
fit.c.res <- fit.c$residuals ^ 2
sum(fit.c.res)
sum(w.c) /sum(fit.c.res)
sum(fit$residuals)
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
fit <- lm(y~x)
summary(fit)
data(mtcars)
attach(mtcars)
fit <- lm(mpg ~ wt, mtcars)
summary(fit)
exp <- fit$coefficients[1] + mean(wt) * fit$coefficients[2]
exp - 2 * 0.5591
?mtcars
summary(fit)
fit[[1]][1] + 3 * fit[[1]][2]
fit[[1]][1]
fit[[1]][2]
summary(fit)
2 * (fit$coefficients[2] - 2 * 0.5591)
attributes(fit)
w.c <- fit$residuals ^ 2
fit.c <- lm(mpg ~ 1, mtcars)
fit.c.res <- fit.c$residuals ^ 2
sum(fit.c.res)
sum(w.c) /sum(fit.c.res)
setwd("~/Desktop/repos/datasciencecoursera/Statistical Inference")
setwd("~/Desktop/repos/datasciencecoursera/Statistical Inference")
data <- data(ToothGrowth)
data
class(data(ToothGrowth))
?data
load(datasets)
load("datasets")
data(ToothGrowth)
rm(data)
rm(ToothGrowth)
data("ToothGrowth")
load(data(ToothGrowth))
attach(data(ToothGrowth))
ToothGrowth
data <- ToothGrowth
str(data)
View(ToothGrowth)
data <- ToothGrowth
str(data)
summary(data$len)
table(data$supp)
table(data$dose)
hist(data$len)
View(data)
setwd("~/Desktop/repos/datasciencecoursera/Statistical Inference")
lambda <- 0.2
n_sim <- 40
n <- 1000
media <- 1/lambda
sd <- 1/lambda
medias <- NULL
for(i in 1:n) medias <- c(medias, mean(rexp(n_sim, lambda)))
hist(medias, main = "Distribution of the averages on forty exp(0.2)", xlab = "lambda", freq = F)
abline(v = 1/lambda, col = "red", lwd = 1.5)
abline(v = mean(medias), col = "blue", lwd = 1.5)
legend("topright", legend = c("Theorical Mean", "Empirical Mean"), col = c("red", "blue"), cex = 0.8, pch = 16)
x <- seq(min(medias), max(medias), length = n)
normales <- dnorm(x, mean = media, sd = sd/sqrt(n_sim))
lines(x, normales, col = "green")
legend("topright", legend = c("Therical Mean", "Empirical Mean", "Theorical Dist"), col = c("red", "blue", "green"), cex = 0.8, pch = 16)
abs((1/lambda)^2 - var(medias)*n_sim)
setwd("~/Desktop/repos/datasciencecoursera/Statistical Inference")
library(datasets)
head(ToothGrowth)
summary(data)
summary(ToothGrowth)
n_x <- 30
n_y <- 30
x_bar <- mean(ToothGrowth$len[1:n_x])
y_bar <- mean(ToothGrowth$len[(n_x+1):(n_x + n_y)])
s_x <- sd(ToothGrowth$len[1:n_x])
s_t <- sd(ToothGrowth$len[(n_x+1):(n_x + n_y)])
alpha <- 0.5
sp_2 <- ((n_x - 1)*s_x^2 + (n_y - 1)*s_y^2) / (n_x + n_y - 2)
s_y <- sd(ToothGrowth$len[(n_x+1):(n_x + n_y)])
alpha <- 0.5
sp_2 <- ((n_x - 1)*s_x^2 + (n_y - 1)*s_y^2) / (n_x + n_y - 2)
sp <- sqrt(sp_2)
ts <- qt(1 - (alpha/2), n_x + n_y - 2)
round((x_bar - y_bar) + c(-1, 1) * ts * sp * (sqrt(1/n_x + 1/n_y)), 3)
n_x <- 30
n_y <- 30
x_bar <- mean(ToothGrowth$len[1:n_x])
y_bar <- mean(ToothGrowth$len[(n_x+1):(n_x + n_y)])
s_x <- sd(ToothGrowth$len[1:n_x])
s_y <- sd(ToothGrowth$len[(n_x+1):(n_x + n_y)])
alpha <- 0.5
sn_x <- s_x^2/n_x
sn_y <- s_y^2/n_y
df <- (sn_x + sn_y)^2 / (sn_x^2/(n_x-1) + sn_y^2/(n_y-1))
df
difference <- ToothGrowth[1:n_x] - ToothGrowth$len[(n_x+1):(n_x + n_y)]
difference <- ToothGrowth$len[1:n_x] - ToothGrowth$len[(n_x+1):(n_x + n_y)]
t.test(difference)
t.test(len~supp, data = ToothGrowth, paired = F)
n_x <- 30
n_y <- 30
x_bar <- mean(ToothGrowth$len[1:n_x])
y_bar <- mean(ToothGrowth$len[(n_x+1):(n_x + n_y)])
s_x <- sd(ToothGrowth$len[1:n_x])
s_y <- sd(ToothGrowth$len[(n_x+1):(n_x + n_y)])
n_x <- 30
n_y <- 30
x_bar <- mean(ToothGrowth$len[1:n_x])
y_bar <- mean(ToothGrowth$len[(n_x+1):(n_x + n_y)])
s_x <- sd(ToothGrowth$len[1:n_x])
s_y <- sd(ToothGrowth$len[(n_x+1):(n_x + n_y)])
alpha <- 0.5
sn_x <- s_x^2/n_x
sn_y <- s_y^2/n_y
df <- (sn_x + sn_y)^2 / (sn_x^2/(n_x-1) + sn_y^2/(n_y-1))
(y_bar - x_bar) + c(-1, 1)*qt(0.975, df)*sqrt(sn_x + sn_y)
round(interval, 2)
interval <- (y_bar - x_bar) + c(-1, 1)*qt(0.975, df)*sqrt(sn_x + sn_y)
round(interval, 2)
round(interval, 3)
ggplot(ToothGrowth, aes(x=factor(dose), y=len, fill=factor(dose)))+geom_boxplot()+facet_grid(.~supp)+ggtitle("Analyzing ToothGrowth data")
library(ggplot2)
ggplot(ToothGrowth, aes(x=factor(dose), y=len, fill=factor(dose)))+geom_boxplot()+facet_grid(.~supp)+ggtitle("Analyzing ToothGrowth data")
?ToothGrowth
library(swirl)
swirl()
library(tidyr)
students
?gather
gather(students, sex, count, -grade)
exit
bye
bye()
setwd("~/Desktop/repos/datasciencecoursera/Statistical Inference")
library(datasets)
library(dplyr)
library(ggplot2)
data(ToothGrowth)
ToothGrowth
ToothGrowth <<
group(supp)
swirl()
1
1
bye()
)
