oauth_endpoints("github")
myapp <- oauth_app("quiz2", "041fe7d5df66f8834c1b", secret="85ab3505e732f175f8f4369367ee4db1abdbe4a6")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
req <- GET("https://api.github.com/users/jtleek/repos", config(token = github_token))
stop_for_status(req)
output <- content(req)
list(output[[4]]$name, output[[4]]$created_at)
output[[4]]
output[[4]]$name
lala <- output[[4]]
lala$created_at
lala$creat
list(output[[5]]$name, output[[5]]$creat)
conexion <- url("http://biostat.jhsph.edu/~jleek/contact.html")
HTMLCode <- readLines(conexion)
close(conexion)
class(HTMLCode)
head(HTMLCode)
nchar(HTMLCode[10])
nchar(HTMLCode[20])
nchar(HTMLCode[30])
nchar(HTMLCode[100])
con <- url("http://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
data_fwf <- read.fwf(file=con, skip=4, widths=c(11,8,4,9,4,9,4,9,4))
close(con)
sum(data_fwf[, 4])
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
g <- ggplot(movies, aes(votes, rating))
print(g)
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies) + stats_smooth("loess")
qplot(votes, rating, data = movies, panel = panel.loess)
qplot(votes, rating, data = movies, smooth = "loess")
fecha_ini <- as.Date("01/01/2014", format = "%d/%m/%Y")
fechas <- fecha_ini + (1:plazo)
plazo = 100
fecha_ini <- as.Date("01/01/2014", format = "%d/%m/%Y")
fechas <- fecha_ini + (1:plazo)
fechas
fechas <- fecha_ini + (0:plazo)
fechas
fechas <- fecha_ini + 0:(plazo-1)
fechas
beca <- fechas[format(fechas, "%d")=="01"]
beca
beca <- fechas[format(fechas, "%d")=="1"]
beca
beca <- fechas[format(fechas, "%d")=="01"]
beca
beca <- data.frame(dates=fechas[format(fechas, "%d")=="01"])
beca
beca$cantidad <- 1000
data$inc <- 1
beca$inc <- 1
beca$exp <- 0
beca$exp[data$inc==0] <- 1
View(beca)
beca$concepto <- "Aqui va un concepto"
View(beca)
beca <- data.frame(dates=fechas[format(fechas, "%d")==1])
beca
beca <- data.frame(dates=fechas[format(fechas, "%d")=="01"])
beca$cantidad <- 1000
recurrentes <- lis(beca=c(), banxico=c(), mesada=c())
recurrentes <- list(beca=c(), banxico=c(), mesada=c())
recurrentes
recurrentes <- list(beca=c(), banxico=c(), mesada=c())
beca <- list(cantidad=1000, fecha_ini=as.Date("01/01/2014", format = "%d/%m/%Y"), tipo=1)
banxico <- list(cantidad=1000, fecha_ini=as.Date("28/02/2014", format = "%d/%m/%Y"), tipo=1)
mesada <- list(cantidad=, fecha_ini=as.Date("05/01/2014", format = "%d/%m/%Y"), tipo=1)
mesada <- list(cantidad=500, fecha_ini=as.Date("05/01/2014", format = "%d/%m/%Y"), tipo=1)
recurrentes <- list(beca=beca, banxico=banxico, mesada=mesada)
recurrentes
url_file <- "http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(url_file, "data2")
setwd("~/Desktop/repos/datasciencecoursera/Getting and Cleaning Data")
url_file <- "http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(url_file, "data2")
data1 <- read.csv("communities.csv")
data2 <- read.csv("data2.csv")
!file.exists("communities.csv")
data <- read.csv("communities.csv")
View(data)
unique(data$ACR)
agricultureLogical <- data$ACR ==3 & data$AGS == 6
which(agricultureLogical)
?which
install.packages("jepg")
install.packages("jpeg")
library(jpeg)
if(!file.exists("pic.jpg")){
url_pic <- "http://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg"
download.file(url_pic, "pic.jpg")
}
picture <- readJPEG("pic.jpg", native = T)
quantile(picture)
quantile(picture, c(.30))
quantile(picture, c(.80))
if(!file.exists("gross.csv")){
url_file <- "http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(url_file, "gross.csv")
}
if(!file.exists("educational.csv")){
url_file <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(url_file, "educational.csv")
}
if(!file.exists("educational.csv")){
url_file <- "http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(url_file, "educational.csv")
}
data_gross <- read.csv("gross.csv")
data_educational <- read.csv("educational.csv")
View(data_educational)
View(data_gross)
View(data_gross)
unique(data_gross$X)
class(data_gross$X)
class(data_educational$CountryCode)
levels(data_gross$X)
levels(data_educational$CountryCode)
levels(data_educational$CountryCode) %in% levels(data_gross$X)
levels(data_gross$X) %in% levels(data_educational$CountryCode)
sum(levels(data_educational$CountryCode) %in% levels(data_gross$X))
sum(levels(data_gross$X) %in% levels(data_educational$CountryCode))
which(levels(data_educational$CountryCode) %in% levels(data_gross$X))
View(data_gross)
data_gross$X
data_educational$CountryCode
data_gross$X %in% data_educational$CountryCode
which(data_gross$X %in% data_educational$CountryCode)
View(data_gross)
data <- cbind(data_gross[which(data_gross$X %in% data_educational$CountryCode), ], data_educational[which(data_educational$CountryCode %in% data_gross$X), ])
View(data)
View(data_gross)
sort(data$Gross.domestic.product.2012)
class(data$Gross.domestic.product.2012)
as.numeric(data$Gross.domestic.product.2012)
View(data)
View(data)
data$Gross.domestic.product.2012
sort(data$Gross.domestic.product.2012)
order(data$Gross.domestic.product.2012)
?sort
sort(data$Gross.domestic.product.2012, decreasing = T)
data <- data[sort(data$Gross.domestic.product.2012, decreasing = T), ]
data[13, ]
View(data)
data[14, ]
View(data)
data[224, ]
View(data)
View(data_gross)
View(data)
View(data_educational)
View(data)
data_gross <- read.csv("gross.csv")
data_educational <- read.csv("educational.csv")
data_gross <- read.csv("gross.csv")
data_educational <- read.csv("educational.csv")
View(data_educational)
View(data_gross)
data_gross <- data_gross[, -2]
View(data_gross)
data_gross <- read.csv("gross.csv")
View(data_gross)
View(data_gross)
data_gross <- data_gross[, c(1,2,4,5)]
View(data_gross)
data_gross <- read.csv("gross.csv")
data_gross <- data_gross[5:235, c(1,2,4,5)]
View(data_gross)
data_gross <- read.csv("gross.csv")
View(data_gross)
data_gross <- data_gross[5:194, c(1,2,4,5)]
View(data_gross)
colnames(data_gross) <- c("Country", "Ranking", "Name", "US Dollars")
View(data_gross)
View(data_gross)
data_gross <- read.csv("gross.csv", as.is = T)
data_gross <- data_gross[5:194, c(1,2,4,5)]
colnames(data_gross) <- c("Country", "Ranking", "Name", "US Dollars")
data_gross <- read.csv("gross.csv", as.is = T)
data_gross <- data_gross[5:194, c(1,2,4,5)]
colnames(data_gross) <- c("Country", "Ranking", "Name", "US Dollars")
data[, c(2, 4)] <- as.numeric(data[, c(2, 4)])
data[, c("Ranking", "US Dollars")] <- apply(data[, c("Ranking", "US Dollars")], 2, as.numeric)
data_gross[, c("Ranking", "US Dollars")] <- apply(data_gross[, c("Ranking", "US Dollars")], 2, as.numeric)
data_gross <- read.csv("gross.csv", as.is = T)
data_gross <- data_gross[5:194, c(1,2,4,5)]
colnames(data_gross) <- c("Country", "Ranking", "Name", "US Dollars")
View(data_gross)
data_gross$Ranking <- as.numeric(data_gross$Ranking)
View(data_gross)
data_educational <- read.csv("educational.csv")
View(data_gross)
View(data_educational)
data_educational <- read.csv("educational.csv", as.is = T)
View(data_educational)
data <- cbind(data_gross[which(data_gross$X %in% data_educational$CountryCode), ], data_educational[which(data_educational$CountryCode %in% data_gross$X), ])
data <- cbind(data_gross[which(data_gross$Country %in% data_educational$CountryCode), ], data_educational[which(data_educational$CountryCode %in% data_gross$Country), ])
View(data)
data_sort <- data[sort(data$Gross.domestic.product.2012, decreasing = T), ]
data_sort <- data[sort(data$Ranking, decreasing = T), ]
View(data_sort)
View(data_gross)
View(data_educational)
match(data_gross$Country, data_educational$CountryCode)
data_gross$Country %in% data_educational$CountryCode
match(data_gross$Country, data_educational$CountryCode)
data_gross$Country
data_educational$CountryCode
data_educational[match(data_gross$Country, data_educational$CountryCode), ]
data_educational[match(data_gross$Country, data_educational$CountryCode), ]$CountryCode
data_gross$Country
data_educational <- data_educational[match(data_gross$Country, data_educational$CountryCode), ]
data_gross <- read.csv("gross.csv", as.is = T)
data_gross <- data_gross[5:194, c(1,2,4,5)]
colnames(data_gross) <- c("Country", "Ranking", "Name", "US Dollars")
data_gross$Ranking <- as.numeric(data_gross$Ranking)
data_educational <- read.csv("educational.csv", as.is = T)
data_educational <- data_educational[match(data_gross$Country, data_educational$CountryCode), ]
View(data_educational)
View(data_gross)
data <- cbind(data_gross, data_educational)
View(data)
sort(data$Ranking)
sort(data$Ranking, decreasing = T)
sort_data <- data[sort(data$Ranking, decreasing = T), ]
View(sort_data)
sort_data[13, ]
data_gross <- read.csv("gross.csv", as.is = T)
data_educational <- read.csv("educational.csv", as.is = T)
data_gross <- read.csv("gross.csv", as.is = T)
View(data_gross)
data_gross <- data_gross[5:194, c(1,2,4,5)]
colnames(data_gross) <- c("Country", "Ranking", "Name", "US Dollars")
data_gross$Ranking <- as.numeric(data_gross$Ranking)
View(data_gross)
data_educational <- read.csv("educational.csv", as.is = T)
View(data_educational)
View(data_educational)
data_educational <- data_educational[match(data_gross$Country, data_educational$CountryCode), ]
data <- cbind(data_gross, data_educational)
View(data)
?match
data_gross <- read.csv("gross.csv", as.is = T)
data_gross <- data_gross[5:194, c(1,2,4,5)]
colnames(data_gross) <- c("Country", "Ranking", "Name", "US Dollars")
data_gross$Ranking <- as.numeric(data_gross$Ranking)
data_educational <- read.csv("educational.csv", as.is = T)
data_educational <- data_educational[data_gross$Country %in% data_educational$CountryCode, ]
View(data_educational)
data_gross$Country %in% data_educational$CountryCode
data_gross$Country %in% data_educational$CountryCode
data_educational$CountryCode  %in% data_gross$Country
data_educational <- data_educational[data_educational$CountryCode %in% data_gross$Country, ]
View(data_educational)
View(data_gross)
data_gross <- read.csv("gross.csv", as.is = T)
data_gross <- data_gross[5:194, c(1,2,4,5)]
colnames(data_gross) <- c("Country", "Ranking", "Name", "US Dollars")
data_gross$Ranking <- as.numeric(data_gross$Ranking)
data_educational <- read.csv("educational.csv", as.is = T)
View(data_gross)
match(data_educational, data_gross$Country)
match(data_educational$CountryCode, data_gross$Country)
View(data_educational)
View(data_gross)
match(data_gross$Country, data_educational$CountryCode)
View(data_educational)
View(data_gross)
!is.na(match(data_gross$Country, data_educational$CountryCode))
data_gross <- data_gross[!is.na(match(data_gross$Country, data_educational$CountryCode)), ]
data_gross <- read.csv("gross.csv", as.is = T)
data_gross <- data_gross[5:194, c(1,2,4,5)]
colnames(data_gross) <- c("Country", "Ranking", "Name", "US Dollars")
data_gross$Ranking <- as.numeric(data_gross$Ranking)
data_educational <- read.csv("educational.csv", as.is = T)
match(data_gross$Country, data_educational$CountryCode)
data_gross <- data_gross[!is.na(match(data_gross$Country, data_educational$CountryCode)), ]
View(data_gross)
data_gross <- read.csv("gross.csv", as.is = T)
data_gross <- data_gross[5:194, c(1,2,4,5)]
colnames(data_gross) <- c("Country", "Ranking", "Name", "US Dollars")
data_gross$Ranking <- as.numeric(data_gross$Ranking)
data_educational <- read.csv("educational.csv", as.is = T)
View(data_gross)
View(data_educational)
data_gross$Country %in% data_educational$CountryCode
data_educational$CountryCode %in% data_gross$Country
data_educational <- data_educational[data_educational$CountryCode %in% data_gross$Country, ]
ata_gross %in% data_educational$CountryCode
data_gross$Country %in% data_educational$CountryCode
data_gross <- data_gross[data_gross$Country %in% data_educational$CountryCode, ]
View(data_educational)
View(data_gross)
match(data_gross$Country, data_educational$CountryCode)
View(data_educational)
View(data_gross)
data_educational <- data_educational[match(data_gross$Country, data_educational$CountryCode), ]
View(data_educational)
View(data_gross)
data <- cbind(data_gross, data_educational)
View(data)
sort_data <- data[sort(data$Ranking, decreasing = T), ]
data <- cbind(1:189, data_gross, data_educational)
View(data)
data <- cbind(data_gross, data_educational)
sort_data <- data[sort(data$Ranking, decreasing = T), ]
sort_data[13, ]
View(data)
View(sort_data)
View(data)
sort(data$Ranking, decreasing = T)
View(data)
unique(data$Income.Group)
View(data)
data$US Dollars[data$Income.Group == "High income: OECD"]
data$"US Dollars"[data$Income.Group == "High income: OECD"]
as.numeric(data$"US Dollars"[data$Income.Group == "High income: OECD"])
View(data)
data$"Ranking"[data$Income.Group == "High income: OECD"]
data$"Ranking"[data$Income.Group == "High income: nonOECD"]
mean(data$"Ranking"[data$Income.Group == "High income: OECD"])
mean(data$"Ranking"[data$Income.Group == "High income: nonOECD"])
grupos <- cut(data$Income.Group, breaks = quantile(data$Ranking, c(0.20, 0.40, 0.60, 0.80, 1)))
cut(data$Ranking, breaks = quantile(data$Ranking, c(0.20, 0.40, 0.60, 0.80, 1)))
quantile(data$Ranking, c(0.20, 0.40, 0.60, 0.80, 1))
View(data)
View(data)
quantile(data$Ranking[data$Income.Grup == "Lower middle income"], c(0.20, 0.40, 0.60, 0.80, 1))
data$Income.Grup == "Lower middle income"
data$Income.Group == "Lower middle income"
quantile(data$Ranking[data$Income.Group == "Lower middle income"], c(0.20, 0.40, 0.60, 0.80, 1))
cut(data$Ranking[data$Income.Group == "Lower middle income"], quantile(data$Ranking, c(0.20, 0.40, 0.60, 0.80, 1)))
data$Ranking[data$Income.Group == "Lower middle income"]
cut(data$Ranking[data$Income.Group == "Lower middle income"], quantile(data$Ranking, c(0.20, 0.40, 0.60, 0.80, 1)))
data$Ranking[data$Income.Group == "Lower middle income"]
38*5
cut(data$Ranking[data$Income.Group == "Lower middle income"], quantile(data$Ranking, 0.8)
cut(data$Ranking[data$Income.Group == "Lower middle income"], quantile(data$Ranking, 0.8)
cut(data$Ranking[data$Income.Group == "Lower middle income"], quantile(data$Ranking, 0.8))
cut(data$Ranking[data$Income.Group == "Lower middle income"], quantile(data$Ranking, c(0.8)))
quantile(data$Ranking, c(0.8))
cut(data$Ranking[data$Income.Group == "Lower middle income"], quantile(data$Ranking, c(0.20, 0.40, 0.60, 0.80, 1)))
cut(data$Ranking, quantile(data$Ranking, c(0.20, 0.40, 0.60, 0.80, 1)))
data$Ranking
quantile(data$Ranking, c(0.20, 0.40, 0.60, 0.80, 1))
cut(data$Ranking, quantile(data$Ranking, c(0, 0.20, 0.40, 0.60, 0.80, 1)))
quantile(data$Ranking, c(0, 0.20, 0.40, 0.60, 0.80, 1))
data$Ranking
cut(data$Ranking, quantile(data$Ranking, c(0, 0.20, 0.40, 0.60, 0.80, 1)))
cut(data$Ranking, quantile(data$Ranking, c(0, 0.20, 0.40, 0.60, 0.80, 1)))
levels(cut(data$Ranking, quantile(data$Ranking, c(0, 0.20, 0.40, 0.60, 0.80, 1))))
class(cut(data$Ranking, quantile(data$Ranking, c(0, 0.20, 0.40, 0.60, 0.80, 1))))
cut(data$Ranking, quantile(data$Ranking, c(0, 0.20, 0.40, 0.60, 0.80, 1)))
data$ranking_data <- cut(data$Ranking, quantile(data$Ranking, c(0, 0.20, 0.40, 0.60, 0.80, 1)))
View(data)
unique(data$Income.Group)
data$Income.Group == "Lower middle income"
data$ranking_data
levels(data$ranking_data)
levels(data$ranking_data)[5]
data$ranking_data == levels(data$ranking_data)[5]
data$Income.Group == "Lower middle income" & data$ranking_data == levels(data$ranking_data)[5]
sum(data$Income.Group == "Lower middle income" & data$ranking_data == levels(data$ranking_data)[5])
sum(data$Income.Group == "Lower middle income" & data$ranking_data == levels(data$ranking_data)[1])
setwd("/Users/iancastillorosales/Desktop/repos/datasciencecoursera/Getting and Cleaning Data/assignment_2")
setwd("/Users/iancastillorosales/Desktop/repos/datasciencecoursera/Getting and Cleaning Data/assignment_2")
url_file <- "http://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
download.file(url_file, "data.zip")
?grep
unzip("data.zip")
x_test <- read.table("./UCI HAR Dataset/train/x_train.txt")
y_test <- read.table("./UCI HAR Dataset/train/y_train.txt")
subject_train <- read.table("./UCI HAR Dataset/train/subject_train.txt")
View(subject_train)
View(y_test)
data_train <- read.table("./UCI HAR Dataset/train/x_train.txt")
label_train <- read.table("./UCI HAR Dataset/train/y_train.txt")
subject_train <- read.table("./UCI HAR Dataset/train/subject_train.txt")
dim(data_train), dim(label_train)
dim(data_train); dim(label_train)
dim(data_train); dim(label_train); dim(subject_train)
table(label_train)
table(subject_train)
View(data_train)
data_test <- read.table("./UCI HAR Dataset/test/x_test.txt")
label_test <- read.table("./UCI HAR Dataset/test/y_test.txt")
subject_test <- read.table("./UCI HAR Dataset/test/subject_test.txt")
data_joined <- rbind(data_train, data_test)
label_joined <- rbind(label_train, label_test)
subject_joined <- rbind(subject_train, subject_test)
dim(data_joined); dim(label_joined); dim(subject_joined)
View(data_joined)
View(label_joined)
View(subject_joined)
features <- read.table("./UCI HAR Dataset/features.txt")
View(features)
mean_index <- grep("mean\\(\\)|std\\(\\)", features[, 2])
View(features)
mean_index <- grep("mean\\(\\)|std\\(\\)", features[, 2])
names(data_joined) <- gsub("\\(\\)", "", features[meanStdIndices, 2]) # remove "()"
names(data_joined) <- gsub("mean", "Mean", names(data_joined)) # capitalize M
features <- read.table("./UCI HAR Dataset/features.txt")
mean_index <- grep("mean\\(\\)|std\\(\\)", features[, 2])
names(data_joined) <- gsub("\\(\\)", "", features[mean_index, 2]) # remove "()"
names(data_joined) <- gsub("mean", "Mean", names(data_joined)) # capitalize M
names(data_joined) <- gsub("std", "Std", names(data_joined)) # capitalize S
names(data_joined) <- gsub("-", "", names(data_joined)) # remove "-" in column names
View(data_joined)
data_joined <- data_joined[, mean_index]
names(data_joined) <- gsub("\\(\\)", "", features[mean_index, 2]) # remove "()"
names(data_joined) <- gsub("mean", "Mean", names(data_joined)) # capitalize M
names(data_joined) <- gsub("std", "Std", names(data_joined)) # capitalize S
names(data_joined) <- gsub("-", "", names(data_joined)) # remove "-" in column names
View(data_joined)
activity <- read.table("./UCI HAR Dataset/activity_labels.txt")
activity[, 2] <- tolower(gsub("_", "", activity[, 2]))
View(activity)
substr(activity[2, 2], 8, 8) <- toupper(substr(activity[2, 2], 8, 8))
substr(activity[3, 2], 8, 8) <- toupper(substr(activity[3, 2], 8, 8))
View(activity)
toupper(substr(activity[2, 2], 8, 8))
toupper(substr(activity[3, 2], 8, 8))
activityLabel <- activity[joinLabel[, 1], 2]
activity <- read.table("./UCI HAR Dataset/activity_labels.txt")
activity[, 2] <- tolower(gsub("_", "", activity[, 2]))
substr(activity[2, 2], 8, 8) <- toupper(substr(activity[2, 2], 8, 8))
substr(activity[3, 2], 8, 8) <- toupper(substr(activity[3, 2], 8, 8))
activityLabel <- activity[label_joined[, 1], 2]
label_joined[, 1] <- activityLabel
names(label_joined) <- "activity"
View(activity)
View(label_joined)
View(label_joined)
substr(activity[2, 2], 8, 8)
activity <- read.table("./UCI HAR Dataset/activity_labels.txt")
activity[, 2] <- tolower(gsub("_", "", activity[, 2]))
substr(activity[2, 2], 8, 8)
View(activity)
substr(activity[3, 2], 8, 8)
View(activity)
substr(activity[2, 2], 8, 8) <- toupper(substr(activity[2, 2], 8, 8))
substr(activity[3, 2], 8, 8) <- toupper(substr(activity[3, 2], 8, 8))
View(activity)
label_joined[, 1]
label_joined <- rbind(label_train, label_test)
label_joined[, 1]
activity <- read.table("./UCI HAR Dataset/activity_labels.txt")
activity[, 2]
View(activity)
label_joined[, 1] <- activity[label_joined[, 1], 2]
names(label_joined) <- "activity"
View(label_joined)
names(label_joined) <- "subject"
cleanedData <- cbind(subject_joined, label_joined, data_joined)
View(cleanedData)
write.table(cleanedData, "merged_data.txt")
!file.exists("getdata-projectfiles-UCI HAR Dataset.zip")
source('~/Desktop/repos/datasciencecoursera/Getting and Cleaning Data/assignment_2/run_analysis.R', echo=TRUE)
library(plyr)
library(ggplot2)
NEI <- readRDS("summarySCC_PM25.rds")
setwd("~/Desktop/repos/datasciencecoursera/Exploratory Data Analysis/assignment_2/")
library(plyr)
library(ggplot2)
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
aggregate.data <- with(NEI, aggregate(Emissions, by = list(year), sum))
plot(aggregate.data, type = "o", ylab = expression("Total Emissions, PM"[2.5]),
xlab = "Year", main = "Total Emissions in the United States")
polygon(aggregate.data, col = "green", border = "blue")
polygon(aggregate.data, col = "blue")
options(scipen=999, digits=8)
polygon(aggregate.data, col = "blue")
options(scipen=999)
polygon(aggregate.data, col = "blue")
xlab = "Year", main = "Total Emissions in the US")
plot(aggregate.data, type = "o", ylab = expression("Total Emissions, PM"[2.5]),
xlab = "Year", main = "Total Emissions in the US")
polygon(aggregate.data, col = "blue")
NEI_24510 <- NEI[which(NEI$fips == "24510"), ]
agg_24510 <- with(NEI_24510, aggregate(Emissions, by = list(year), sum))
colnames(agg_24510) <- c("year", "Emissions")
plot(agg_24510, type = "o", ylab = expression("Total Emissions, PM"[2.5]),
xlab = "Year", main = "Total Emissions for Baltimore", xlim = c(1999, 2008))
plot(agg_24510, type = "l", ylab = expression("Total Emissions, PM"[2.5]),
xlab = "Year", main = "Total Emissions for Baltimore", xlim = c(1999, 2008))
NEI_24510 <- NEI[which(NEI$fips == "24510"), ]
agg_24510 <- with(NEI_24510, aggregate(Emissions, by = list(year), sum))
colnames(agg_24510) <- c("year", "Emissions")
NEI_24510.type <- ddply(NEI_24510, .(type, year), summarize, Emissions = sum(Emissions))
NEI_24510.type$Pollutant_Type <- NEI_24510.type$type
qplot(year, Emissions, data = NEI_24510.type, group = Pollutant_Type, color = Pollutant_Type,
geom = c("point", "line"), ylab = expression("Total Emissions, PM"[2.5]),
xlab = "Year", main = "Total Emissions in U.S. by Type of Pollutant")
SCC_coal <- grep("coal", SCC$Short.Name, ignore.case = TRUE)
SCC_coal <- SCC[SCC_coal, ]
SCC_ident <- as.character(SCC_coal$SCC)
NEI$SCC <- as.character(NEI$SCC)
NEI.coal <- NEI[NEI$SCC %in% SCC_ident, ]
agg_coal <- with(NEI.coal, aggregate(Emissions, by = list(year), sum))
colnames(agg_coal) <- c("year", "Emissions")
plot(agg_coal, type = "o", ylab = expression("Total Emissions, PM"[2.5]),
xlab = "Year", main = "Emissions and Total Coal Combustion for the US",
xlim = c(1999, 2008))
polygon(agg_coal, col = "blue")
