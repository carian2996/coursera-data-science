recurrentes <- list(beca=c(), banxico=c(), mesada=c())
beca <- list(cantidad=1000, fecha_ini=as.Date("01/01/2014", format = "%d/%m/%Y"), tipo=1)
banxico <- list(cantidad=1000, fecha_ini=as.Date("28/02/2014", format = "%d/%m/%Y"), tipo=1)
mesada <- list(cantidad=, fecha_ini=as.Date("05/01/2014", format = "%d/%m/%Y"), tipo=1)
mesada <- list(cantidad=500, fecha_ini=as.Date("05/01/2014", format = "%d/%m/%Y"), tipo=1)
recurrentes <- list(beca=beca, banxico=banxico, mesada=mesada)
recurrentes
library(datasets)
data(iris)
?iris
data(mtcars)
?mtcars
head(iris)
levels(iris$Species)
medias <- sapply(split(iris, iris$Species), function(x) colMeans(x[, colnames(iris)[1:4]]))
medias["Sepal.Length", "virginica"]
virginica <- split(iris, iris$Species)$virginica
mean(virginica$Sepal.Length)
mean(iris$Sepal.Length[iris$Species=="virginica"])
# ===== Question 2 =====
class(iris)
apply(iris, 2, mean) # Contiene la variable "Species"
apply(iris[, 1:4], 2, mean) # Solo contiene las variables numÃ©ricas
# ===== Question 3 =====
head(mtcars)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
# ===== Question 4 =====
medias_hp_cilindro <- sapply(split(mtcars$hp, mtcars$cyl), mean)
abs(medias_hp_cilindro[1] - medias_hp_cilindro[3])
?bin
?rbin
?rbin()
?rbinom
pbinom(12, 100, .1)
pbinom(12, 100, .1) - pbinom(10, 100, .1)
pbinom(22, 100, .1) - pbinom(20, 100, .1)
pbinom(22, 100, 2/10) - pbinom(20, 100, 2/10)
library("swirl", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
swirl()
install.packages(c("boot", "class", "cluster", "codetools", "data.table", "httr", "jsonlite", "KernSmooth", "labeling", "maps", "MASS", "mgcv", "Rcpp", "RCurl", "spam", "swirl", "testthat", "xlsx", "xlsxjars"))
library("swirl", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
swirl()
swirl()
install_from_swirl("Getting and Cleaning Data")
swirl()
mydf <- read.csv(path2csv, stringsAsFactors = F)
mydf <- read.csv(path2csv, stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
cran
?manip
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
-5:20
-(5:20)
select(cran, -(size))
select(cran, -(X:size))
filter(cran, package == "swirl")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country == "IN" | country == "IN")
filter(cran, country == "US" | country == "IN")
filter(cran, size > 100500, r_os == "linux_gnu")
filter(cran, size > 100500, r_os == "linux-gnu")
is.na(c(3, 5, NA, 10))
!is.na(c(3, 5, NA, 10))
filter(cran, !is.na(r_version))
cran2 <- select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_gb = size_mb / 2^10)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb/2^10)
mutate(cran3, correct_size = size + 1000)
summarize(cran, avg_bytes = mean(size))
library(httr)
require(httpuv)
require(jsonlite)
oauth_endpoints("github")
myapp <- oauth_app("quiz2", "041fe7d5df66f8834c1b", secret="85ab3505e732f175f8f4369367ee4db1abdbe4a6")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
req <- GET("https://api.github.com/users/jtleek/repos", config(token = github_token))
stop_for_status(req)
output <- content(req)
list(output[[5]]$name, output[[5]]$creat)
conexion <- url("http://biostat.jhsph.edu/~jleek/contact.html")
HTMLCode <- readLines(conexion)
close(conexion)
class(HTMLCode)
head(HTMLCode)
nchar(HTMLCode[10])
nchar(HTMLCode[20])
nchar(HTMLCode[30])
nchar(HTMLCode[100])
con <- url("http://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
data_fwf <- read.fwf(file=con, skip=4, widths=c(11,8,4,9,4,9,4,9,4))
close(con)
sum(data_fwf[, 4])
library("swirl", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
swirl()
library(dplyr)
cran <- tbl_df()
cran <- tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package <- group_by(cran, package)
by_package
summarize(by_package)
summarize(by_package, mean(size))
?n
?n_distinct
submit()
pack_sum
quantile(pack_sum$count, probs = 0.99)
top_counts <- filter(pack_sum, count > 679)
top_counts
head(top_counts, 20)
arrange(top_counts, desc(count))
quantile(pack_sum$unique, probs = 0.99)
top_unique <- filter(pack_sum, unique > 465)
top_unique
arrange(top_unique, desc(unique))
submit()
submit()
submit()
??chain
submit()
submit()
submit()
submit()
swirl()
library(swirl)
swirl()
0
exit()
exit
library(swirl)
swirl()
Sys.getlocale("LC_TIME")
library(lubridate)
help(packgae = lubridate)
help(lubridate)
help(package = lubridate)
today()
this_day <- today()
this_day
day(this_day)
wday(this_day)
wday(this_day, label = T)
wday(this_day, label = TRUE)
this_moment <- now()
this_moment
hour(this_moment)
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989-04-17")
ymd("1989 May 17")
myd("March 12, 1975")
mdy("March 12, 1975")
dmy(25081985)
ymd("192012")
ymd("192012--")
ymd("1920/1/2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
this_moment <- update(this_moment, hours = hour(now()), minutes = minute(now()))
this_moment
nyc <- now(tzone = "America/New_York")
nyc
depart <- nyc + days(2)
depart
depart <- update(depart, hours = 17, minutes = 34)
depart
arrive <- depart + hours(15) + munites(50)
arrive <- depart + hours(15) + minutes(50)
?with_tz
with_tz(arrive, tzone = "Asia/Hong_Kong")
arrive <- with_tz(arrive, "Asia/Hong_Kong")
arrive
mdy("June 17, 2008", tz = "Singapore")
last_time <- mdy("June 17, 2008", tz = "Singapore")
last_time
?new_interval
how_long <- new_interval(last_time, arrive)
as.period(how_long)
stopwatch()
library(dplyr, quietly = T)
official_events <- tolower(c("Astronomical Low Tide", "Avalanche", "Blizzard",
"Coastal Flood", "Cold/Wind Chill", "Debris Flow",
"Dense Fog", "Dense Smoke", "Drought", "Dust Devil",
"Dust Storm", "Excessive Heat", "Extreme Cold/Wind Chill",
"Flash Flood", "Flood", "Frost/Freeze", "Funnel Cloud",
"Freezing Fog", "Hail", "Heat", "Heavy Rain", "Heavy Snow",
"High Surf", "High Wind", "Hurricane (Typhoon)", "Ice Storm",
"Lake-Effect Snow", "Lakeshore Flood", "Lightning",
"Marine Hail", "Marine High Wind", "Marine Strong Wind",
"Marine Thunderstorm Wind", "Rip Curren", "Seiche", "Sleet",
"Storm Surge/Tide", "Strong Wind", "Thunderstorm Wind",
"Tornado", "Tropical Depression", "Tropical Storm", "Tsunami",
"Volcanic Ash", "Waterspout", "Wildfire", "Winter Storm",
"Winter Weather"))
setwd("~/Desktop/repos/datasciencecoursera/Reproducible Reaserch/PeerAssessment2")
data <- read.csv(bzfile("data.bz2"))
names(data) <- tolower(names(data))
data$evtype <- tolower(data$evtype)
head(data %>% select(state, evtype, fatalities, injuries, propdmg, cropdmg))
str(data)
harmful_data <- data %>%
select(bgn_date, state, evtype, fatalities, injuries) %>%
filter(!(fatalities == 0 & injuries == 0))
pattern <- substr(official_events, 1, 4)
for(i in seq_along(official_events)){
harmful_data$evtype[grep(pattern[i], harmful_data$evtype)] <- official_events[i]
}
by_evtype_harmful <- harmful_data %>%
filter(!is.na(match(harmful_data$state, state.abb)) &
!is.na(match(harmful_data$evtype, official_events))) %>%
group_by(evtype) %>%
summarise(sum(fatalities), max(fatalities), sum(injuries), max(injuries))
names(by_evtype_harmful) <- c("evtype", "total_fatal", "max_fatal", "total_injur", "max_injur")
harmful_event <- c()
by_evtype_harmful$evtype[which.max(by_evtype_harmful$total_fatal)]
by_evtype_harmful$evtype[which.max(by_evtype_harmful$total_injur)]
by_evtype_harmful$evtype[which.max(by_evtype_harmful$max_fatal)]
by_evtype_harmful$evtype[which.max(by_evtype_harmful$max_injur)]
labels <- by_evtype_harmful$evtype[by_evtype_harmful$total_fatal > 3000]
plot(by_evtype_harmful$total_fatal, by_evtype_harmful$total_injur,
xlim = c(1, max(by_evtype_harmful$total_fatal) + 200),
ylim = c(1, max(by_evtype_harmful$total_injur) + 2000),
main = "Most harmful event for population health",
xlab = "Total of fatalities", ylab = "Total of injuries")
points(by_evtype_harmful$total_fatal[by_evtype_harmful$total_fatal > 3000], by_evtype_harmful$total_injur[by_evtype_harmful$total_fatal > 3000], col = "red", pch = 20, lwd = 2)
text(by_evtype_harmful$total_fatal[by_evtype_harmful$total_fatal > 3000], by_evtype_harmful$total_injur[by_evtype_harmful$total_fatal > 3000], labels = labels, pos = 2, cex = 0.8)
labels2 <- by_evtype_harmful$evtype[by_evtype_harmful$max_injur > 1000]
labels3 <- by_evtype_harmful$evtype[by_evtype_harmful$max_fatal > 500]
plot(by_evtype_harmful$max_fatal, by_evtype_harmful$max_injur,
xlim = c(1, max(by_evtype_harmful$max_fatal) + 100),
ylim = c(1, max(by_evtype_harmful$max_injur) + 200),
main = "Most harmful event for population health",
xlab = "Maximun of fatalities", ylab = "Maximun of injuries")
points(by_evtype_harmful$max_fatal[by_evtype_harmful$max_injur > 1000], by_evtype_harmful$max_injur[by_evtype_harmful$max_injur > 1000], col = "red", pch = 20, lwd = 2)
points(by_evtype_harmful$max_fatal[by_evtype_harmful$max_fatal > 500], by_evtype_harmful$max_injur[by_evtype_harmful$max_fatal > 500], col = "red", pch = 20, lwd = 2)
text(by_evtype_harmful$max_fatal[by_evtype_harmful$max_injur > 1000], by_evtype_harmful$max_injur[by_evtype_harmful$max_injur > 1000], labels = labels2, pos = 4, cex = 0.8)
text(by_evtype_harmful$max_fatal[by_evtype_harmful$max_fatal > 500], by_evtype_harmful$max_injur[by_evtype_harmful$max_fatal > 500], labels = labels3, pos = 1, cex = 0.8)
economic_data <- data %>%
select(bgn_date, state, evtype, propdmg, propdmgexp, cropdmg, cropdmgexp) %>%
filter(!(propdmg == 0 & cropdmg == 0))
for(i in seq_along(official_events)){
economic_data$evtype[grep(pattern[i], harmful_data$evtype)] <- official_events[i]
}
by_evtype_economic <- economic_data %>%
filter(!is.na(match(economic_data$state, state.abb)) &
!is.na(match(economic_data$evtype, official_events))) %>%
group_by(evtype) %>%
summarise(sum(propdmg), max(propdmg), sum(cropdmg), max(cropdmg))
names(by_evtype_economic) <- c("evtype", "total_prop", "max_prop", "total_crop", "max_crop")
harmful_event <- c()
by_evtype_economic$evtype[which.max(by_evtype_economic$total_prop)]
by_evtype_economic$evtype[which.max(by_evtype_economic$max_prop)]
by_evtype_economic$evtype[which.max(by_evtype_economic$total_crop)]
by_evtype_economic$evtype[which.max(by_evtype_economic$max_crop)]
barplot(by_evtype_economic$total_prop, names.arg = 1:42, col = "red", ylim = c(0, max(by_evtype_economic$total_prop) + 1000))
barplot(by_evtype_economic$total_crop, col = "blue", add = T, axes = F)
text(x = which.max(by_evtype_economic$total_prop), y = max(by_evtype_economic$total_prop), label = by_evtype_economic$evtype[which.max(by_evtype_economic$total_prop)], cex = 0.7, pos = 1)
which.max(by_evtype_economic$total_crop)
which.max(by_evtype_economic$total_prop)
max(by_evtype_economic$total_prop)
max(by_evtype_economic$total_crop)
by_evtype_economic$evtype[which.max(by_evtype_economic$total_crop)]
text(x = which.max(by_evtype_economic$total_crop), y = max(by_evtype_economic$total_crop), label = by_evtype_economic$evtype[which.max(by_evtype_economic$total_crop)], cex = 0.7, pos = 1)
by_evtype_economic$evtype[which.max(by_evtype_economic$total_prop)]
by_evtype_economic$evtype[which.max(by_evtype_economic$max_prop)]
by_evtype_economic$evtype[which.max(by_evtype_economic$total_crop)]
by_evtype_economic$evtype[which.max(by_evtype_economic$max_crop)]
which.max(by_evtype_economic$max_prop)
max(by_evtype_economic$max_prop)
by_evtype_economic$evtype[which.max(by_evtype_economic$max_prop)]
text(x = which.max(by_evtype_economic$max_prop), y = max(by_evtype_economic$max_prop), label = by_evtype_economic$evtype[which.max(by_evtype_economic$max_prop)], cex = 0.7, pos = 1)
text(x = which.max(by_evtype_economic$max_prop) + 100000, y = max(by_evtype_economic$max_prop), label = by_evtype_economic$evtype[which.max(by_evtype_economic$max_prop)], cex = 0.7, pos = 1)
text(x = which.max(by_evtype_economic$max_prop) + 100000000, y = max(by_evtype_economic$max_prop), label = by_evtype_economic$evtype[which.max(by_evtype_economic$max_prop)], cex = 0.7, pos = 1)
text(x = which.max(by_evtype_economic$max_prop), y = max(by_evtype_economic$max_prop), label = by_evtype_economic$evtype[which.max(by_evtype_economic$max_prop)], cex = 3, pos = 1)
text(x = which.max(by_evtype_economic$max_prop), y = 1000000 label = by_evtype_economic$evtype[which.max(by_evtype_economic$max_prop)], cex = 3, pos = 1)
text(x = which.max(by_evtype_economic$max_prop), y = 1000000, label = by_evtype_economic$evtype[which.max(by_evtype_economic$max_prop)], cex = 3, pos = 1)
barplot(by_evtype_economic$total_prop, names.arg = 1:42, col = "red", ylim = c(0, max(by_evtype_economic$total_prop) + 1000))
barplot(by_evtype_economic$total_crop, col = "blue", add = T, axes = F)
text(x = which.max(by_evtype_economic$total_prop), y = max(by_evtype_economic$total_prop), label = by_evtype_economic$evtype[which.max(by_evtype_economic$total_prop)], cex = 0.7, pos = 1)
text(x = which.max(by_evtype_economic$total_crop), y = max(by_evtype_economic$total_crop), label = by_evtype_economic$evtype[which.max(by_evtype_economic$total_crop)], cex = 0.7, pos = 1)
text(x = which.max(by_evtype_economic$max_prop), y = 1000000, label = by_evtype_economic$evtype[which.max(by_evtype_economic$max_prop)], cex = 0.8, pos = 1)
barplot(by_evtype_economic$total_prop, names.arg = 1:42, col = "red", ylim = c(0, max(by_evtype_economic$total_prop) + 1000))
barplot(by_evtype_economic$total_crop, col = "blue", add = T, axes = F)
text(x = which.max(by_evtype_economic$total_prop), y = max(by_evtype_economic$total_prop), label = by_evtype_economic$evtype[which.max(by_evtype_economic$total_prop)], cex = 0.7, pos = 1)
text(x = which.max(by_evtype_economic$total_crop), y = max(by_evtype_economic$total_crop), label = by_evtype_economic$evtype[which.max(by_evtype_economic$total_crop)], cex = 0.7, pos = 1)
text(x = which.max(by_evtype_economic$max_prop), y = 2000000, label = by_evtype_economic$evtype[which.max(by_evtype_economic$max_prop)], cex = 0.8, pos = 1)
by_evtype_economic$evtype[which.max(by_evtype_economic$total_crop)]
barplot(by_evtype_economic$total_prop, names.arg = 1:42, col = "red", ylim = c(0, max(by_evtype_economic$total_prop) + 1000))
barplot(by_evtype_economic$total_crop, col = "blue", add = T, axes = F)
text(x = which.max(by_evtype_economic$total_prop), y = max(by_evtype_economic$total_prop), label = by_evtype_economic$evtype[which.max(by_evtype_economic$total_prop)], cex = 0.7, pos = 1)
text(x = which.max(by_evtype_economic$total_crop), y = max(by_evtype_economic$total_crop) + 10000, label = by_evtype_economic$evtype[which.max(by_evtype_economic$total_crop)], cex = 0.7, pos = 1)
text(x = which.max(by_evtype_economic$total_crop), y = (max(by_evtype_economic$total_crop) + 10000), label = by_evtype_economic$evtype[which.max(by_evtype_economic$total_crop)], cex = 0.7, pos = 1)
text(x = which.max(by_evtype_economic$total_crop), y = (max(by_evtype_economic$total_crop) + 1000000), label = by_evtype_economic$evtype[which.max(by_evtype_economic$total_crop)], cex = 0.7, pos = 1)
text(x = which.max(by_evtype_economic$total_crop), y = (max(by_evtype_economic$total_crop) + 100000), label = by_evtype_economic$evtype[which.max(by_evtype_economic$total_crop)], cex = 0.7, pos = 1)
barplot(by_evtype_economic$total_prop, names.arg = 1:42, col = "red", ylim = c(0, max(by_evtype_economic$total_prop) + 1000))
barplot(by_evtype_economic$total_crop, col = "blue", add = T, axes = F)
text(x = which.max(by_evtype_economic$total_prop), y = max(by_evtype_economic$total_prop), label = by_evtype_economic$evtype[which.max(by_evtype_economic$total_prop)], cex = 0.7, pos = 1)
text(x = which.max(by_evtype_economic$total_crop), y = (max(by_evtype_economic$total_crop) + 100000), label = by_evtype_economic$evtype[which.max(by_evtype_economic$total_crop)], cex = 0.7, pos = 1)
barplot(by_evtype_economic$total_prop, names.arg = 1:42, col = "red", ylim = c(0, max(by_evtype_economic$total_prop) + 1000))
barplot(by_evtype_economic$total_crop, col = "blue", add = T, axes = F)
text(x = which.max(by_evtype_economic$total_prop), y = max(by_evtype_economic$total_prop), label = by_evtype_economic$evtype[which.max(by_evtype_economic$total_prop)], cex = 0.7, pos = 1)
text(x = which.max(by_evtype_economic$total_crop), y = (max(by_evtype_economic$total_crop) + 1000000), label = by_evtype_economic$evtype[which.max(by_evtype_economic$total_crop)], cex = 0.7, pos = 1)
text(x = which.max(by_evtype_economic$total_crop), y = (max(by_evtype_economic$total_crop) + 500000), label = by_evtype_economic$evtype[which.max(by_evtype_economic$total_crop)], cex = 0.7, pos = 1)
text(x = which.max(by_evtype_economic$total_crop), y = (max(by_evtype_economic$total_crop) + 500000), label = by_evtype_economic$evtype[which.max(by_evtype_economic$total_crop)], cex = 0.7, pos = 2)
text(x = which.max(by_evtype_economic$total_crop), y = (max(by_evtype_economic$total_crop) + 500000), label = by_evtype_economic$evtype[which.max(by_evtype_economic$total_crop)], cex = 0.7, pos = 4)
text(x = which.max(by_evtype_economic$total_crop), y = (max(by_evtype_economic$total_crop) + 400000), label = by_evtype_economic$evtype[which.max(by_evtype_economic$total_crop)], cex = 0.7, pos = 4)
text(x = which.max(by_evtype_economic$total_crop), y = (max(by_evtype_economic$total_crop) + 300000), label = by_evtype_economic$evtype[which.max(by_evtype_economic$total_crop)], cex = 0.7, pos = 4)
barplot(by_evtype_economic$total_prop, names.arg = 1:42, col = "red", ylim = c(0, max(by_evtype_economic$total_prop) + 1000))
barplot(by_evtype_economic$total_crop, col = "blue", add = T, axes = F)
text(x = which.max(by_evtype_economic$total_prop), y = max(by_evtype_economic$total_prop), label = by_evtype_economic$evtype[which.max(by_evtype_economic$total_prop)], cex = 0.7, pos = 1)
text(x = which.max(by_evtype_economic$total_crop), y = (max(by_evtype_economic$total_crop) + 300000), label = by_evtype_economic$evtype[which.max(by_evtype_economic$total_crop)], cex = 0.7, pos = 4)
which.max(by_evtype_economic$total_prop)
text(x = which.max(by_evtype_economic$total_prop), y = max(by_evtype_economic$total_prop), label = by_evtype_economic$evtype[which.max(by_evtype_economic$total_prop)], cex = 0.7, pos = 4)
barplot(by_evtype_economic$total_prop, names.arg = 1:42, col = "red", ylim = c(0, max(by_evtype_economic$total_prop) + 1000))
barplot(by_evtype_economic$total_crop, col = "blue", add = T, axes = F)
text(x = which.max(by_evtype_economic$total_prop), y = max(by_evtype_economic$total_prop), label = by_evtype_economic$evtype[which.max(by_evtype_economic$total_prop)], cex = 0.7, pos = 4)
text(x = which.max(by_evtype_economic$total_prop), y = (max(by_evtype_economic$total_prop) + 300000), label = by_evtype_economic$evtype[which.max(by_evtype_economic$total_prop)], cex = 0.7, pos = 4)
barplot(by_evtype_economic$total_prop, names.arg = 1:42, col = "red", ylim = c(0, max(by_evtype_economic$total_prop) + 1000))
barplot(by_evtype_economic$total_crop, col = "blue", add = T, axes = F)
barplot(by_evtype_economic$total_prop, names.arg = 1:42, col = "red", ylim = c(0, max(by_evtype_economic$total_prop) + 5000))
barplot(by_evtype_economic$total_crop, col = "blue", add = T, axes = F)
text(x = which.max(by_evtype_economic$total_prop), y = (max(by_evtype_economic$total_prop) + 300000), label = by_evtype_economic$evtype[which.max(by_evtype_economic$total_prop)], cex = 0.7, pos = 4)
text(x = which.max(by_evtype_economic$total_crop), y = (max(by_evtype_economic$total_crop) + 300000), label = by_evtype_economic$evtype[which.max(by_evtype_economic$total_crop)], cex = 0.7, pos = 4)
barplot(by_evtype_economic$total_prop, names.arg = 1:42, col = "red", ylim = c(0, max(by_evtype_economic$total_prop) + 5000000))
barplot(by_evtype_economic$total_prop, names.arg = 1:42, col = "red", ylim = c(0, max(by_evtype_economic$total_prop) + 500000))
barplot(by_evtype_economic$total_crop, col = "blue", add = T, axes = F)
text(x = which.max(by_evtype_economic$total_prop), y = (max(by_evtype_economic$total_prop) + 300000), label = by_evtype_economic$evtype[which.max(by_evtype_economic$total_prop)], cex = 0.7, pos = 4)
text(x = which.max(by_evtype_economic$total_crop), y = (max(by_evtype_economic$total_crop) + 300000), label = by_evtype_economic$evtype[which.max(by_evtype_economic$total_crop)], cex = 0.7, pos = 4)
text(x = which.max(by_evtype_economic$max_prop), y = 2000000, label = by_evtype_economic$evtype[which.max(by_evtype_economic$max_prop)], cex = 0.8, pos = 1)
barplot(by_evtype_economic$total_prop, names.arg = 1:42, col = "red",
ylim = c(0, max(by_evtype_economic$total_prop) + 500000))
barplot(by_evtype_economic$total_crop, col = "blue", add = T, axes = F)
text(x = which.max(by_evtype_economic$total_prop), y = (max(by_evtype_economic$total_prop) + 300000),
label = by_evtype_economic$evtype[which.max(by_evtype_economic$total_prop)], cex = 0.7, pos = 4)
text(x = which.max(by_evtype_economic$total_crop), y = (max(by_evtype_economic$total_crop) + 300000),
label = by_evtype_economic$evtype[which.max(by_evtype_economic$total_crop)], cex = 0.7, pos = 4)
text(x = which.max(by_evtype_economic$max_prop), y = 2000000,
label = by_evtype_economic$evtype[which.max(by_evtype_economic$max_prop)], cex = 0.7, pos = 4)
barplot(by_evtype_economic$total_prop, names.arg = 1:42, col = "red",
ylim = c(0, max(by_evtype_economic$total_prop) + 500000))
barplot(by_evtype_economic$total_crop, col = "blue", add = T, axes = F)
text(x = which.max(by_evtype_economic$total_prop), y = (max(by_evtype_economic$total_prop) + 300000),
label = by_evtype_economic$evtype[which.max(by_evtype_economic$total_prop)], cex = 0.7, pos = 4)
text(x = which.max(by_evtype_economic$total_crop), y = (max(by_evtype_economic$total_crop) + 300000),
label = by_evtype_economic$evtype[which.max(by_evtype_economic$total_crop)], cex = 0.7, pos = 4)
text(x = which.max(by_evtype_economic$max_prop), y = 300000,
label = by_evtype_economic$evtype[which.max(by_evtype_economic$max_prop)], cex = 0.7, pos = 4)
(max(by_evtype_economic$max_prop) + 300000)
text(x = which.max(by_evtype_economic$max_prop), y = (max(by_evtype_economic$max_prop) + 300000),
label = by_evtype_economic$evtype[which.max(by_evtype_economic$max_prop)], cex = 0.7, pos = 4)
barplot(by_evtype_economic$total_prop, names.arg = 1:42, col = "red",
ylim = c(0, max(by_evtype_economic$total_prop) + 500000))
barplot(by_evtype_economic$total_crop, col = "blue", add = T, axes = F)
text(x = which.max(by_evtype_economic$total_prop), y = (max(by_evtype_economic$total_prop) + 300000),
label = by_evtype_economic$evtype[which.max(by_evtype_economic$total_prop)], cex = 0.7, pos = 4)
text(x = which.max(by_evtype_economic$total_crop), y = (max(by_evtype_economic$total_crop) + 300000),
label = by_evtype_economic$evtype[which.max(by_evtype_economic$total_crop)], cex = 0.7, pos = 4)
text(x = which.max(by_evtype_economic$max_prop), y = (max(by_evtype_economic$max_prop) + 300000),
label = by_evtype_economic$evtype[which.max(by_evtype_economic$max_prop)], cex = 0.7, pos = 4)
text(x = which.max(by_evtype_economic$max_crop), y = (max(by_evtype_economic$max_crop) + 300000),
label = by_evtype_economic$evtype[which.max(by_evtype_economic$max_crop)], cex = 0.7, pos = 4)
label = by_evtype_economic$evtype[which.max(by_evtype_economic$max_crop)], cex = 0.7, pos = 1)
text(x = which.max(by_evtype_economic$max_crop), y = (max(by_evtype_economic$max_crop) + 300000),
label = by_evtype_economic$evtype[which.max(by_evtype_economic$max_crop)], cex = 0.7, pos = 1)
text(x = which.max(by_evtype_economic$max_crop), y = (max(by_evtype_economic$max_crop) + 500000),
label = by_evtype_economic$evtype[which.max(by_evtype_economic$max_crop)], cex = 0.7, pos = 1)
text(x = which.max(by_evtype_economic$max_crop), y = (max(by_evtype_economic$max_crop) + 500000),
label = by_evtype_economic$evtype[which.max(by_evtype_economic$max_crop)], cex = 0.7, pos = 2)
text(x = which.max(by_evtype_economic$max_crop), y = (max(by_evtype_economic$max_crop) + 500000),
label = by_evtype_economic$evtype[which.max(by_evtype_economic$max_crop)], cex = 0.7, pos = 3)
text(x = which.max(by_evtype_economic$max_crop), y = (max(by_evtype_economic$max_crop) + 500000),
label = by_evtype_economic$evtype[which.max(by_evtype_economic$max_crop)], cex = 0.7, pos = 4)
barplot(by_evtype_economic$total_prop, names.arg = 1:42, col = "red",
ylim = c(0, max(by_evtype_economic$total_prop) + 500000))
barplot(by_evtype_economic$total_crop, col = "blue", add = T, axes = F)
text(x = which.max(by_evtype_economic$total_prop), y = (max(by_evtype_economic$total_prop) + 300000),
label = by_evtype_economic$evtype[which.max(by_evtype_economic$total_prop)], cex = 0.7, pos = 4)
text(x = which.max(by_evtype_economic$total_crop), y = (max(by_evtype_economic$total_crop) + 300000),
label = by_evtype_economic$evtype[which.max(by_evtype_economic$total_crop)], cex = 0.7, pos = 4)
text(x = which.max(by_evtype_economic$max_prop), y = (max(by_evtype_economic$max_prop) + 300000),
label = by_evtype_economic$evtype[which.max(by_evtype_economic$max_prop)], cex = 0.7, pos = 4)
text(x = which.max(by_evtype_economic$max_crop), y = (max(by_evtype_economic$max_crop) + 500000),
label = by_evtype_economic$evtype[which.max(by_evtype_economic$max_crop)], cex = 0.7, pos = 4)
barplot(by_evtype_economic$total_prop, col = "red",
ylim = c(0, max(by_evtype_economic$total_prop) + 500000))
barplot(by_evtype_economic$total_crop, col = "blue", add = T, axes = F)
text(x = which.max(by_evtype_economic$total_prop), y = (max(by_evtype_economic$total_prop) + 300000),
label = by_evtype_economic$evtype[which.max(by_evtype_economic$total_prop)], cex = 0.7, pos = 4)
text(x = which.max(by_evtype_economic$total_crop), y = (max(by_evtype_economic$total_crop) + 300000),
label = by_evtype_economic$evtype[which.max(by_evtype_economic$total_crop)], cex = 0.7, pos = 4)
text(x = which.max(by_evtype_economic$max_prop), y = (max(by_evtype_economic$max_prop) + 300000),
label = by_evtype_economic$evtype[which.max(by_evtype_economic$max_prop)], cex = 0.7, pos = 4)
text(x = which.max(by_evtype_economic$max_crop), y = (max(by_evtype_economic$max_crop) + 500000),
label = by_evtype_economic$evtype[which.max(by_evtype_economic$max_crop)], cex = 0.7, pos = 4)
barplot(by_evtype_economic$total_prop, col = "red",
ylim = c(0, max(by_evtype_economic$total_prop) + 500000))
barplot(by_evtype_economic$total_crop, col = "blue", add = T, axes = F, legend.text = "Crop")
barplot(by_evtype_economic$total_prop, col = "red",
ylim = c(0, max(by_evtype_economic$total_prop) + 500000), )
barplot(by_evtype_economic$total_crop, col = "blue", add = T, axes = F, legend.text = "Crop", cex = 0.7)
barplot(by_evtype_economic$total_prop, col = "red",
ylim = c(0, max(by_evtype_economic$total_prop) + 500000), legend.text = "Property Damage")
barplot(by_evtype_economic$total_crop, col = "blue", add = T, axes = F, legend.text = "Crop Damage")
barplot(by_evtype_economic$total_prop, col = "red",
ylim = c(0, max(by_evtype_economic$total_prop) + 500000))
barplot(by_evtype_economic$total_crop, col = "blue", add = T, axes = F)
max(by_evtype_economic$total_prop) + 500000
legend(3000000, 40, c("Propery Damage", "Crop Damage"), lty = c(1, 1), col = c("red", "blue"))
legend(2000000, 40, c("Propery Damage", "Crop Damage"), lty = c(1, 1), col = c("red", "blue"))
barplot(by_evtype_economic$total_prop, col = "red",
ylim = c(0, max(by_evtype_economic$total_prop) + 500000))
barplot(by_evtype_economic$total_crop, col = "blue", add = T, axes = F)
legend(2000000, 40, c("Propery Damage", "Crop Damage"), lty = c(1, 1), col = c("red", "blue"))
legend(2000000, 1, c("Propery Damage", "Crop Damage"), lty = c(1, 1), col = c("red", "blue"))
barplot(by_evtype_economic$total_prop, col = "red",
ylim = c(0, max(by_evtype_economic$total_prop) + 500000))
barplot(by_evtype_economic$total_crop, col = "blue", add = T, axes = F)
legend(x = 1, y = 1000000, c("Propery Damage", "Crop Damage"), lty = c(1, 1), col = c("red", "blue"))
legend(x = 1, y = 3000000, c("Propery Damage", "Crop Damage"), lty = c(1, 1), col = c("red", "blue"))
legend(x = 1, y = 3000000, c("Propery Damage", "Crop Damage"), lty = c(1, 1), col = c("red", "blue"), cex = 0.7)
barplot(by_evtype_economic$total_prop, col = "red",
ylim = c(0, max(by_evtype_economic$total_prop) + 500000))
barplot(by_evtype_economic$total_crop, col = "blue", add = T, axes = F)
legend(x = 1, y = 3000000, c("Propery Damage", "Crop Damage"), lty = c(1, 1), col = c("red", "blue"), cex = 0.7)
barplot(by_evtype_economic$total_prop, col = "red",
ylim = c(0, max(by_evtype_economic$total_prop) + 500000))
barplot(by_evtype_economic$total_crop, col = "blue", add = T, axes = F)
legend(x = 1, y = 2500000, c("Propery Damage", "Crop Damage"), lty = c(1, 1), col = c("red", "blue"), cex = 0.7)
text(x = which.max(by_evtype_economic$total_prop), y = (max(by_evtype_economic$total_prop) + 300000),
label = by_evtype_economic$evtype[which.max(by_evtype_economic$total_prop)], cex = 0.7, pos = 4)
text(x = which.max(by_evtype_economic$total_crop), y = (max(by_evtype_economic$total_crop) + 300000),
label = by_evtype_economic$evtype[which.max(by_evtype_economic$total_crop)], cex = 0.7, pos = 4)
text(x = which.max(by_evtype_economic$max_prop), y = (max(by_evtype_economic$max_prop) + 300000),
label = by_evtype_economic$evtype[which.max(by_evtype_economic$max_prop)], cex = 0.7, pos = 4)
text(x = which.max(by_evtype_economic$max_crop), y = (max(by_evtype_economic$max_crop) + 500000),
label = by_evtype_economic$evtype[which.max(by_evtype_economic$max_crop)], cex = 0.7, pos = 4)
```
legend(x = 1, y = 2500000, c("Propery Damage", "Crop Damage"), lty = c(2, 2), col = c("red", "blue"), cex = 0.7)
legend(x = 1, y = 2500000, c("Propery Damage", "Crop Damage"), lty = c(3, 3), col = c("red", "blue"), cex = 0.7)
legend(x = 1, y = 2500000, c("Propery Damage", "Crop Damage"), lty = c(20, 20), col = c("red", "blue"), cex = 0.7)
legend(x = 1, y = 2500000, c("Propery Damage", "Crop Damage"), lty = c(21, 21), col = c("red", "blue"), cex = 0.7)
legend(x = 1, y = 2500000, c("Propery Damage", "Crop Damage"), lty = c(4, 4), col = c("red", "blue"), cex = 0.7)
legend("topleft", c("Propery Damage", "Crop Damage"), lty = c(4, 4), col = c("red", "blue"), cex = 0.7)
legend("topleft", c("Propery Damage", "Crop Damage"), lty = c(NA, NA), col = c("red", "blue"), cex = 0.7)
legend("topleft", c("Propery Damage", "Crop Damage"), lty = c(NA, NA), pch = c(20, 20), col = c("red", "blue"), cex = 0.7)
legend("topleft", c("Propery Damage", "Crop Damage"), pch = c(20, 20), col = c("red", "blue"), cex = 0.7)
legend("topleft", c("Propery Damage", "Crop Damage"), pch = c(15, 15), col = c("red", "blue"), cex = 0.7)
barplot(by_evtype_economic$total_prop, col = "red",
ylim = c(0, max(by_evtype_economic$total_prop) + 500000))
barplot(by_evtype_economic$total_crop, col = "blue", add = T, axes = F)
legend("topleft", c("Propery Damage", "Crop Damage"), pch = c(15, 15), col = c("red", "blue"), cex = 0.7)
text(x = which.max(by_evtype_economic$total_prop), y = (max(by_evtype_economic$total_prop) + 300000),
label = by_evtype_economic$evtype[which.max(by_evtype_economic$total_prop)], cex = 0.7, pos = 4)
text(x = which.max(by_evtype_economic$total_crop), y = (max(by_evtype_economic$total_crop) + 300000),
label = by_evtype_economic$evtype[which.max(by_evtype_economic$total_crop)], cex = 0.7, pos = 4)
text(x = which.max(by_evtype_economic$max_prop), y = (max(by_evtype_economic$max_prop) + 300000),
label = by_evtype_economic$evtype[which.max(by_evtype_economic$max_prop)], cex = 0.7, pos = 4)
text(x = which.max(by_evtype_economic$max_crop), y = (max(by_evtype_economic$max_crop) + 500000),
label = by_evtype_economic$evtype[which.max(by_evtype_economic$max_crop)], cex = 0.7, pos = 4)
legend("topleft", c("Propery Damage", "Crop Damage"), pch = c(15, 15), col = c("red", "blue"), cex = 1)
legend("topleft", c("Propery Damage", "Crop Damage"), pch = c(15, 15), col = c("red", "blue"), cex = 0.8)
by_evtype_harmful$evtype[which.max(by_evtype_harmful$total_fatal)]
by_evtype_harmful$evtype[which.max(by_evtype_harmful$total_injur)]
by_evtype_harmful$evtype[which.max(by_evtype_harmful$max_fatal)]
by_evtype_harmful$evtype[which.max(by_evtype_harmful$max_injur)]
by_evtype_harmful$evtype[which.max(by_evtype_harmful$total_fatal)]
by_evtype_harmful$evtype[which.max(by_evtype_harmful$total_injur)]
max(by_evtype_harmful$total_fatal)
max_total_injur <- max(by_evtype_harmful$total_injur)
max_total_injur
max_fatal <- max(by_evtype_harmful$max_fatal)
max_fatal
economic_event <- c()
(economic_event[1] <- by_evtype_economic$evtype[which.max(by_evtype_economic$total_prop)])
(economic_event[2] <- by_evtype_economic$evtype[which.max(by_evtype_economic$max_prop)])
(economic_event[3] <- by_evtype_economic$evtype[which.max(by_evtype_economic$total_crop)])
(economic_event[4] <- by_evtype_economic$evtype[which.max(by_evtype_economic$max_crop)])
harmful_event <- c()
(harmful_event[1] <- by_evtype_harmful$evtype[which.max(by_evtype_harmful$total_fatal)])
(harmful_event[2] <- by_evtype_harmful$evtype[which.max(by_evtype_harmful$total_injur)])
(harmful_event[3] <- by_evtype_harmful$evtype[which.max(by_evtype_harmful$max_fatal)])
(harmful_event[4] <- by_evtype_harmful$evtype[which.max(by_evtype_harmful$max_injur)])
barplot(by_evtype_economic$total_prop, col = "red",
ylim = c(0, max(by_evtype_economic$total_prop) + 500000))
barplot(by_evtype_economic$total_crop, col = "blue", add = T, axes = F)
